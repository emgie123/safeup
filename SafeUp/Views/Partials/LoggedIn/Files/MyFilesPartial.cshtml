@model SafeUp.Models.DBPOSTGREs.Table<SafeUp.Models.SafeUpModels.File>

@{

    Layout = null;

}

<div id="partial-content" class="row">
    <div class="col-lg-12">
        <h2>Moje pliki</h2>
        <div class="panel panel-default">
            <table class="table">
                <thead>
                <tr>
                    <th>Lp.</th>
                    <th>Nazwa pliku</th>
                    <th>Data dodania</th>
                    <th>Rozmiar</th>
                    <th></th>
                </tr>
                </thead>
                <tbody>
                @{int counter = 0;}
                @foreach (var file in Model.Rows.Values)
                {
                    counter++;
                    <tr>
                        <td>@counter</td>
                        <td>@file.Name</td>
                        <td>@file.CreatedOn</td>
                        <td>@file.Size</td>
                        <td>
                            @Ajax.ActionLink("Udostępnij", "ShareFile", "MyFiles", new {IdFile = file.ID},
                                new AjaxOptions()
                                {
                                    UpdateTargetId = "modal-content",
                                    HttpMethod = "GET",
                                    InsertionMode = InsertionMode.Replace,
                                    LoadingElementId = "loading"
                                },
                                new {@class = "btn btn-info", type = "button", style = "border-radius:0;", data_toggle = "modal", data_target = "#myfiles-modal-div"})
                        </td>
                        <td>
                            @using (Ajax.BeginForm(
                                "DownloadFile", "MyFiles",
                                new {fileId = file.ID},
                                new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    OnSuccess = "StartDownloadFile(data)"
                                },
                                new {}

                                ))
                            {

                                @Html.AntiForgeryToken()

                                <input type="hidden" name="fileId" value="@file.ID"/>
                                <button id="@string.Format("directly-shared-file{0}", file.ID)" type="submit" value="Pobierz" class="btn btn-success" style="border-radius: 0; width: 140px;" target="blank">Pobierz</button>



                            }
                        </td>
                    </tr>


                }
                </tbody>


            </table>

            <div class="modal fade" id="myfiles-modal-div" style="margin-top: 5%;">
                <div class="modal-dialog">
                    <div id="modal-content">

                    </div>
                </div>
            </div>




        </div>


        @using (Html.BeginForm("UploadFile", "MyFiles",
            null,
            FormMethod.Post,
            new {id = "upload-form", enctype = "multipart/form-data"}
            ))
        {
            @Html.AntiForgeryToken()
            <div style="background: rgba(255, 255, 255, 0.8); height: 50px; padding: 15px;">
                <input id="file-input" type="file" name="file"style="display: inline;"/>

                <input id="encrypted-hidden-string"type="hidden" name="encryptedString" value=""/>
                <input id="hidden-key" type="hidden" name="key" value=""/>
                <input id="hidden-name" type="hidden" name="name" value=""/>
                <input id="hidden-size" type="hidden" name="size" value=""/>

                <input type="button" value="Dodaj" style="display: inline; border-radius: 0; margin-top: -7px; width: 140px;" class="btn btn-success" onclick="EncodeAndSubmit()"/>
            </div>
            <br/>
            @ViewBag.UploadStatus

        }



    </div>

</div>

<a id="download-href" href="" type="hidden" download></a>

<script src="~/Scripts/jquery-2.1.3.min.js"></script>
<script src="~/Scripts/CryptoJS.js"></script>
<script src="~/Scripts/encode-file.js"></script>

<script>
    
    function EncodeAndSubmit() {

    
        var encrypted;
        var passphrase;
        var fileName;
        var fileSize;

            if (document.getElementById("file-input").files.length !== 1)
            {
               return alert("Wybierz plik!");
              
            }

            var file = document.getElementById("file-input").files[0];

            if (file.size > 1450000) {
                return alert('Plik jest zbyt duży!');

            }

            fileName = file.name;
            fileSize = file.size;

            var reader = new FileReader();

            reader.onload = function (readedFile) {
                passphrase = GenerateKey();

                encrypted = CryptoJS.AES.encrypt(readedFile.target.result, passphrase);

                document.getElementById('hidden-name').value = fileName;
                document.getElementById('hidden-size').value = fileSize;
                document.getElementById('hidden-key').value = passphrase;

                console.log(passphrase);
                console.log(readedFile.name);
                console.log(readedFile.size);

                SetValueToFieldAndSubmit(encrypted);
            }

            reader.readAsDataURL(file);

            function SetValueToFieldAndSubmit(data) {

         
                document.getElementById("encrypted-hidden-string").value = data;
                document.getElementById("upload-form").submit();
            }

            function GenerateKey() {
                var key = "";
                var characters = "0123456789qwertyuiopasdfghjklzxcvbnm";
                for (var i = 0; i < 16; i++) {
                    key += characters.charAt(Math.floor(Math.random() * 36));
                }
                return key;
            }

    }

    function DecodeAndDownload(encrypted) {
     
        var decrypted = CryptoJS.AES.decrypt(encrypted, "haslo").toString(CryptoJS.enc.Latin1);
  
        //tu sie przypinamy do jakiegos linku, wrzucamy mu ten plik jako dane
        $("#download-href").attr('href', decrypted);
       // $("#download-href").attr('download', decrypted.name.replace('.encrypted', ''));
        $("#download-href").attr('download="abc.jpg"');
        //i teraz trzeba ten link odpalic samemu
        $("#download-href")[0].click();

    }






</script>